# comment
{
    a="A"
    b="B"
    d={
        a="AA"
        b="BB"
        d={
            a="AAA"
            b="BBB"
        }
    }
    l=[a b skip d.a]
    exp = [b *l a]
    postfix = func(text suffix=", yo" -> text + suffix)
    mkfix = func(suffix -> func(text suffix=suffix -> text + suffix))
    recurse = func(x -> if(x=="aaaaaaaaa":x recurse(x+"a")))
    confrel = relpath("asdf")
    static=puke("dynamic override required")
    "strange key" = "so strange"
    strange = { "strange sub key" = "so so strange" }

    # Global lazies are unbustable; if they were bustable, a global reference
    # evaluated during config construction will segfault, since the config
    # doesn't actually exist during config construction.
    busttest = func(x=a ->
        # However, the lazy inside of this dict must be broken by the reference
        # to x, so each call to busttest returns a distinct dictionary.
        # values.
        {a="a" x=x}
    )
}
