add_executable(dns main.c membuf.c dns.c parse.c write.c)
default_compile_options(dns TRUE)
define_file_logname_for_target(dns)
target_link_libraries(dns PUBLIC dstr uvthread)

if("${CMAKE_C_COMPILER_ID}" STREQUAL "GNU")
    source_compile_options(parse.c "-Wno-conversion")
    source_compile_options(test_parse.c "-Wno-conversion")
    source_compile_options(write.c "-Wno-conversion")
    source_compile_options(test_write.c "-Wno-conversion")
elseif("${CMAKE_C_COMPILER_ID}" MATCHES "Clang")
elseif("${CMAKE_C_COMPILER_ID}" STREQUAL "MSVC")
endif()

if(BUILD_TESTS)
    enable_testing()

    add_executable(test_parse test_parse.c)
    target_link_libraries(test_parse PUBLIC dstr)
    default_compile_options(test_parse TRUE)
    define_file_logname_for_target(test_parse)
    add_test(NAME "do_test_parse" COMMAND "./test_parse")

    add_executable(test_write test_write.c parse.c)
    target_link_libraries(test_write PUBLIC dstr)
    default_compile_options(test_write TRUE)
    define_file_logname_for_target(test_write)
    add_test(NAME "do_test_write" COMMAND "./test_write")

    add_executable(test_dns test_dns.c parse.c write.c membuf.c)
    target_link_libraries(test_dns PUBLIC dstr)
    default_compile_options(test_dns TRUE)
    define_file_logname_for_target(test_dns)
    add_test(NAME "do_test_dns" COMMAND "./test_dns")

endif()
